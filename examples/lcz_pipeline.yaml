context_parser: pypyr.parser.keyvaluepairs
steps:
  - name: peony.cmd
    onError: 'upsampling failed for {path} in {workdir}'
    in:
      stepname: upsample
      outputFile: '{workdir}/upsampled.tif'
      cmd:
        run: sbatch upsample.sh {workdir}
        cwd: '{workdir}'
        stdout: '{workdir}/upsample_sbatch.stdout.log'
        stderr: '{workdir}/upsample_sbatch.stderr.log'

#  - name: peony.cmd
#    onError: 'cloudmask failed for {path} in {workdir}'
#    in:
#      stepname: cloudmask
#      inputFiles:
#        - '{workdir}/upsampled.tif'
#      outputFile: '{workdir}/cloudmask.tif'
#      cmd:
#        run: sen2cloudless.py -i {workdir}/upsampled.tif -o {workdir}/cloudmask.tif
#        cwd: '{workdir}'
#        stdout: '{workdir}/cloudmask.stdout.log'
#        stderr: '{workdir}/cloudmask.stderr.log'

#  - name: peony.cmd
#    onError: 'inference failed for {path} in {workdir}'
#    in:
#      stepname: inference
#      inputFiles:
#        - '{workdir}/upsampled.tif'
#      outputFile: '{workdir}/lcz_pro.tiff'
#      cmd:
#        run: sen2inference.py -i {workdir}/upsampled.tif -m /peony/test/s2_lcz_weights.hdf5 -o {workdir}/ --output-file-name=lcz
#        cwd: '{workdir}'
#        stdout: '{workdir}/inference.stdout.log'
#        stderr: '{workdir}/inference.stderr.log'

on_failure:
  - name: pypyr.steps.filewrite
    in:
      fileWrite:
        path: '{logfile}'
        payload: "FAILURE: {runErrors[0][customError]}\n"
        append: True
